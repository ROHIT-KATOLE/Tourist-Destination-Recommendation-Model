{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1RKDFSfyKmfAgdZp287l8dnHmIvP3dmxm","authorship_tag":"ABX9TyM6YHcfsBcJ9+YA5z6hl+ik"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["pip install geopy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3gwUsl8MqO_3","executionInfo":{"status":"ok","timestamp":1696472829991,"user_tz":-330,"elapsed":5165,"user":{"displayName":"Rohit Katole","userId":"15955799462390254627"}},"outputId":"7e5b2b48-909f-4d2a-c1c8-9098b487ce99"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: geopy in /usr/local/lib/python3.10/dist-packages (2.3.0)\n","Requirement already satisfied: geographiclib<3,>=1.52 in /usr/local/lib/python3.10/dist-packages (from geopy) (2.0)\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","from geopy.geocoders import Nominatim\n","\n","locations_df = pd.read_csv('/content/Location - Sheet1.csv')\n","\n","def get_lat_long(textual_location):\n","    geolocator = Nominatim(user_agent=\"geoapiExercise\")\n","    location_info = geolocator.geocode(textual_location)\n","    if location_info:\n","        return location_info.latitude, location_info.longitude\n","    else:\n","        return None, None\n","\n","locations_df['Latitude'], locations_df['Longitude'] = zip(*locations_df['Location'].apply(lambda x: get_lat_long(x)))\n","\n","locations_df.to_csv('location_with_coordinates.csv', index=False)\n","\n","print('Conversion and saving completed successfully.')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ol41PEton4lF","executionInfo":{"status":"ok","timestamp":1696473958789,"user_tz":-330,"elapsed":80809,"user":{"displayName":"Rohit Katole","userId":"15955799462390254627"}},"outputId":"a5d07b38-afc9-4165-fc3e-f139da3ee6db"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Conversion and saving completed successfully.\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.neighbors import NearestNeighbors\n","from geopy.geocoders import Nominatim\n","\n","places_data = pd.read_csv('/content/Project_website - Sheet1.csv')\n","\n","encoder = OneHotEncoder()\n","category_encoded = encoder.fit_transform(places_data[['Category']])\n","\n","features = pd.concat([places_data[['Latitude', 'Longitude']], pd.DataFrame(category_encoded.toarray())], axis=1)\n","features.columns = features.columns.astype(str)\n","\n","k = 3\n","knn_model = NearestNeighbors(n_neighbors=k, metric='euclidean')\n","knn_model.fit(features)\n","\n","def get_lat_long(location):\n","    geolocator = Nominatim(user_agent=\"geoapiExercise\")\n","    location_info = geolocator.geocode(location)\n","    if location_info:\n","        return location_info.latitude, location_info.longitude\n","    else:\n","        return None, None\n","\n","def recommend_places(location, category):\n","    latitude, longitude = get_lat_long(location)\n","    if latitude is None or longitude is None:\n","        print(f\"Could not determine coordinates for {location}.\")\n","        return None\n","\n","    input_features = encoder.transform(pd.DataFrame([[category]]))\n","    input_location = pd.DataFrame([[latitude, longitude]], columns=['Latitude', 'Longitude'])\n","    category_columns = encoder.get_feature_names_out(['Category'])\n","\n","    input_features = pd.concat([input_location, pd.DataFrame(input_features.toarray(), columns=category_columns)], axis=1)\n","    input_features.columns = features.columns\n","    _, indices = knn_model.kneighbors(input_features, n_neighbors=k)\n","\n","    recommended_places = places_data.iloc[indices[0]]\n","\n","    return recommended_places\n","\n","#example\n","location = 'Himachal Pradesh'\n","category = 'Camping'\n","recommendations = recommend_places(location, category)\n","print(recommendations)"],"metadata":{"id":"HzTqYMECyayF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696772974275,"user_tz":-330,"elapsed":3124,"user":{"displayName":"Rohit Katole","userId":"15955799462390254627"}},"outputId":"b7792bde-dc0d-492a-ab8e-b3475afbb605"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   Category           Places                 location  Latitude  Longitude\n","94  Camping             Tosh  Himachal Pradesh, India  31.81676  77.349321\n","98  Camping       Kheerganga  Himachal Pradesh, India  31.81676  77.349321\n","95  Camping  Chandratal Lake  Himachal Pradesh, India  31.81676  77.349321\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but OneHotEncoder was fitted with feature names\n","  warnings.warn(\n"]}]}]}